{"ast":null,"code":"var _jsxFileName = \"/Users/franz/Documents/web/portfolio projects/mood manager/mood_manager/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Header from './Components/Header/Header';\nimport Emotions from './Components/Emotions/Emotions';\nimport Advice from './Components/Advice/Advice';\nimport Spotify from './util/Spotify';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emotion: '',\n      playlists: [{\n        id: '',\n        name: '',\n        uri: ''\n      }]\n    };\n    this.changeEmotion = this.changeEmotion.bind(this);\n    this.playlistSearch = this.playlistSearch.bind(this);\n  }\n\n  changeEmotion(emotion) {\n    this.setState({\n      emotion: emotion\n    });\n    this.playlistSearch(emotion);\n  }\n\n  playlistSearch(emotion) {\n    let searchTerm;\n\n    if (emotion === 'angry') {\n      searchTerm = 'chill';\n    } else if (emotion === 'happy') {\n      searchTerm = 'party';\n    } else if (emotion === 'sad') {\n      searchTerm = 'classical';\n    } else if (emotion === 'frustrated') {\n      searchTerm = 'summer';\n    } else if (emotion === 'anxious') {\n      searchTerm = 'edm_dance';\n    } else if (emotion === 'emotionless') {\n      searchTerm = 'mood';\n    } else if (emotion === 'demotivated') {\n      searchTerm = 'workout';\n    } else if (emotion === 'stressed') {\n      searchTerm = 'wellness';\n    }\n\n    ;\n    Spotify.searchPlaylists(searchTerm).then(searchResults => this.setState({\n      playlists: searchResults\n    }));\n    Spotify.getCategoryList();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, this.state.emotion ? null : /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Emotions, {\n      onEmotionChange: this.changeEmotion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }), this.state.emotion ? /*#__PURE__*/React.createElement(Advice, {\n      emotion: this.state.emotion,\n      playlists: this.state.playlists,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 31\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"footer\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, \"\\xA9 2020 Franziska Nelson\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/franz/Documents/web/portfolio projects/mood manager/mood_manager/src/App.js"],"names":["React","Header","Emotions","Advice","Spotify","App","Component","constructor","props","state","emotion","playlists","id","name","uri","changeEmotion","bind","playlistSearch","setState","searchTerm","searchPlaylists","then","searchResults","getCategoryList","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Header from './Components/Header/Header';\nimport Emotions from './Components/Emotions/Emotions';\nimport Advice from './Components/Advice/Advice';\nimport Spotify from './util/Spotify';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      emotion: '',\n      playlists: [{\n        id: '',\n        name: '',\n        uri: ''\n      }]\n    };\n\n    this.changeEmotion = this.changeEmotion.bind(this);\n    this.playlistSearch = this.playlistSearch.bind(this);\n  }\n\n  changeEmotion(emotion) {\n    this.setState({ emotion: emotion });\n    this.playlistSearch(emotion);\n  }\n\n  playlistSearch(emotion) {\n    let searchTerm;\n    if (emotion === 'angry') {\n      searchTerm = 'chill';\n    } else if (emotion === 'happy') {\n      searchTerm = 'party';    \n    } else if (emotion === 'sad') {\n      searchTerm = 'classical';    \n    } else if (emotion === 'frustrated') {\n      searchTerm = 'summer';    \n    } else if (emotion === 'anxious') {\n      searchTerm = 'edm_dance';    \n    } else if (emotion === 'emotionless') {\n      searchTerm = 'mood';    \n    } else if (emotion === 'demotivated') {\n      searchTerm = 'workout';    \n    } else if (emotion === 'stressed') {\n      searchTerm = 'wellness';    \n    };\n    Spotify.searchPlaylists(searchTerm).then(searchResults => this.setState({ playlists: searchResults }));\n    Spotify.getCategoryList();\n  }\n\n  0: \"Top Lists\"\n1: \"At Home\"\n2: \"Pop\"\n3: \"Mood\"\n4: \"Pride\"\n5: \"Summer\"\n6: \"Hip-Hop\"\n7: \"Rock\"\n8: \"Chill\"\n9: \"Electronic/Dance\"\n10: \"Wellness\"\n11: \"Party\"\n12: \"Decades\"\n13: \"Indie\"\n14: \"Trending\"\n15: \"Tastemakers\"\n16: \"Kids & Family\"\n17: \"Folk & Acoustic\"\n18: \"Soul\"\n19: \"Workout\"\n20: \"Jazz\"\n21: \"Latin\"\n22: \"Focus\"\n23: \"Cooking & Dining\"\n24: \"Sleep\"\n25: \"Classical\"\n26: \"Gaming\"\n27: \"Metal\"\n28: \"R&B\"\n29: \"Country\"\n30: \"Travel\"\n31: \"Blues\"\n32: \"Punk\"\n33: \"Romance\"\n34: \"Funk\"\n35: \"Reggae\"\n36: \"K-Pop\"\n37: \"Audiobooks\"\n38: \"Afro\"\n39: \"Arab\"\n40: \"Desi\"\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.emotion ? null: <Header />}\n\n        <Emotions onEmotionChange={this.changeEmotion}/>\n\n        {this.state.emotion ? <Advice emotion={this.state.emotion} playlists={this.state.playlists}/> : null}\n\n        <footer>\n          &copy; 2020 Franziska Nelson\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}